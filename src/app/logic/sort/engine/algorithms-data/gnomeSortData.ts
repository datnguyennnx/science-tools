'use client'

import type { SortAlgorithm } from '../algorithmRegistry'
import { gnomeSortGenerator } from '../algorithms'

export const gnomeSortData: SortAlgorithm = {
  id: 'gnomeSort',
  name: 'Gnome Sort',
  description:
    'Originally called "Stupid Sort," Gnome Sort is a simple sorting algorithm conceived by Hamid Sarbazi-Azad and later described and named "Gnome Sort" by Dick Grune. It is similar to Insertion Sort but instead of using nested loops to find the insertion position, it repeatedly compares adjacent elements and swaps them if they are in the wrong order, moving back only when a swap occurs. It\'s known for its simplicity and is often used as an educational example.',
  generator: gnomeSortGenerator,
  complexity: { time: { best: 'O(n)', average: 'O(n^2)', worst: 'O(n^2)' }, space: 'O(1)' },
  origin: { name: 'Hamid Sarbazi-Azad / Dick Grune', year: 2000 },
  img: 'https://sharif.edu/~azad/Works_files/image003.jpg',
  pseudoCodes: {
    plaintext: [
      'procedure gnomeSort(list)',
      '  index = 0',
      '  n = length of list',
      '  while index < n',
      '    if index == 0 then',
      '      index = index + 1',
      '    else if list[index] >= list[index - 1] then // For ascending. For descending: list[index] <= list[index - 1]',
      '      index = index + 1',
      '    else',
      '      swap(list[index], list[index - 1])',
      '      index = index - 1',
      '    end if',
      '  end while',
      'end procedure',
    ],
    c: [
      'void gnomeSort(int arr[], int n) {',
      '  int index = 0;',
      '  while (index < n) {',
      '    if (index == 0) {',
      '      index++;',
      '    } else if (arr[index] >= arr[index - 1]) { // For ascending. For descending: arr[index] <= arr[index - 1]',
      '      index++;',
      '    } else {',
      '      int temp = arr[index];',
      '      arr[index] = arr[index - 1];',
      '      arr[index - 1] = temp;',
      '      index--;',
      '    }',
      '  }',
      '}',
    ],
    cpp: [
      '#include <algorithm> // For std::swap',
      '',
      'void gnomeSort(int arr[], int n) {',
      '  int index = 0;',
      '  while (index < n) {',
      '    if (index == 0) {',
      '      index++;',
      '    } else if (arr[index] >= arr[index - 1]) { // For ascending. For descending: arr[index] <= arr[index - 1]',
      '      index++;',
      '    } else {',
      '      std::swap(arr[index], arr[index - 1]);',
      '      index--;',
      '    }',
      '  }',
      '}',
    ],
    python: [
      'def gnome_sort(arr):',
      '    index = 0',
      '    n = len(arr)',
      '    while index < n:',
      '        if index == 0:',
      '            index += 1',
      '        elif arr[index] >= arr[index - 1]: # For ascending. For descending: arr[index] <= arr[index - 1]',
      '            index += 1',
      '        else:',
      '            arr[index], arr[index - 1] = arr[index - 1], arr[index]',
      '            index -= 1',
      '    return arr',
    ],
  },
}
